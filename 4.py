'''
Сформувати функцію для введення з клавіатури послідовності чисел і виведення
її на екран у зворотному порядку (завершаючий символ послідовності – крапка)
Огороднік Марина Олександрівна, І курс, група 122А
'''
'''
У даному випадку доцільніше використовувати функцію з ітерацією; час розробки трохи менший у випадку з ітерацією;
читабельність нормальна у обох випадках; час виконання функцій практично однаковий (у випадку ітерації трохи швидше);
пам'ять (стек) у випадку з рекурсіює використовується не доцільно, тому що результат кожного виклику вноситься у стек,
а ці дані не є важливими (потрібними)
'''
import timeit  # імпортуємо модуль для обрахунку часу роботи функцій
def func_rec(seq):
    ''' Функція для виведення на екран у зворотньому порядку послідовності за допомогою рекурсії

    :param seq: вихідна послідовність
    '''
    print(seq[-1], end='')  # друкуємо останній елемент послідовності, закінчуємо ''
    if len(seq) > 1:  # визначаємо базовий випадок, коли рекурсія закінчиться
        func_rec(seq[:-1])  # викликаємо функцію для послідовніості без останнього елемента

def func_iter(seq):
    ''' Функція для виведення на екран у зворотньому порядку послідовності за допомогою ітерації

    :param seq: вихідна послідовність
    '''
    # циклічно обходимо елементи послідовності у зворотньому порядку за допомогою відє'мних індексів
    for i in range(-1, -len(seq)-1, -1):
        print(seq[i], end='')  # друкуємо останній елемент послідовності, закінчуємо ''

while True:
    while True:
        A = input('Input a sequence: ')
        if A[-1] == '.':   # перевірка, чи послідовність закінчується крапкою
            break
        else:
            print('Sequence must end with .')
    # виводимо результат і час виконання функції
    print(f'Recursion: \nResult = ', end='')
    func_rec(A)
    print(f'\ntime = {timeit.timeit("func_rec(A)", setup="from __main__ import func_rec, A", number=1)}')
    print(f'\nIteration: \nResult = ', end='')
    func_iter(A)
    print(f'\ntime = {timeit.timeit("func_iter(A)", setup="from __main__ import func_iter, A", number=1)}')

    # запитуємо кристувача чи продовжувати роботу далі, чи завершити програму
    answer = input('Do you want to continue (+) or complete the program (anything)? ')
    if answer == '+':
        continue
    else:
        break